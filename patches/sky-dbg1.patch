Index: git/src/partners_check.c
===================================================================
--- git.orig/src/partners_check.c
+++ git/src/partners_check.c
@@ -58,9 +58,9 @@ static void parse_partner_id(char *partn
     (*partnersList)->count = count+1;
     while ((token = strsep(&partnerId, ",")) != NULL)
     {
-        ParodusPrint("token=%s\n", token);
+        ParodusInfo("token=%s\n", token);
         (*partnersList)->partner_ids[j] = strdup(token);
-        ParodusPrint("(*partnersList)->partner_ids[%d] = %s\n",j,(*partnersList)->partner_ids[j]);
+        ParodusInfo("(*partnersList)->partner_ids[%d] = %s\n",j,(*partnersList)->partner_ids[j]);
         j++;
     }
 }
@@ -71,31 +71,31 @@ int validate_partner_id(wrp_msg_t *msg,
     size_t j = 0;
     partners_t *partnersList = NULL;
     char *partnerId = NULL;
-    ParodusPrint("********* %s ********\n",__FUNCTION__);
+    ParodusInfo("********* %s ********\n",__FUNCTION__);
     char *temp = get_parodus_cfg()->partner_id;
-    ParodusPrint("temp = %s\n",temp);
+    ParodusInfo("temp = %s\n",temp);
     if(temp[0] != '\0' && strlen(temp) > 0)
     {
         partnerId = strdup(temp);
     }
-    ParodusPrint("partnerId = %s\n",partnerId);
+    ParodusInfo("partnerId = %s\n",partnerId);
     if(partnerId != NULL)
     {
         parse_partner_id(partnerId, &partnersList);
-        ParodusPrint("partnersList->count = %lu\n", partnersList->count);
+        ParodusInfo("partnersList->count = %lu\n", partnersList->count);
         if(msg->msg_type == WRP_MSG_TYPE__EVENT)
         {
             if(msg->u.event.partner_ids != NULL)
             {
                 count = (int) msg->u.event.partner_ids->count;
-                ParodusPrint("partner_ids count is %d\n",count);
+                ParodusInfo("EVENT:partner_ids count is %d\n",count);
                 for(i = 0; i < count; i++)
                 {
                     for(j = 0; j<partnersList->count; j++)
                     {
 			if(NULL != partnersList->partner_ids[j]) {
-		                ParodusPrint("partnersList->partner_ids[%lu] = %s\n",j, partnersList->partner_ids[j]);
-				ParodusPrint("msg->u.event.partner_ids->partner_ids[%lu] = %s\n",i, msg->u.event.partner_ids->partner_ids[i]);
+		                ParodusInfo("partnersList->partner_ids[%lu] = %s\n",j, partnersList->partner_ids[j]);
+				ParodusInfo("msg->u.event.partner_ids->partner_ids[%lu] = %s\n",i, msg->u.event.partner_ids->partner_ids[i]);
 		                if(strcasecmp(partnersList->partner_ids[j], msg->u.event.partner_ids->partner_ids[i]) == 0)
 		                {
 		                    ParodusInfo("partner_id match found\n");
@@ -121,21 +121,21 @@ int validate_partner_id(wrp_msg_t *msg,
                     for(i = 0; i < count; i++)
                     {
                         (*partnerIds)->partner_ids[i] = msg->u.event.partner_ids->partner_ids[i];
-                        ParodusPrint("(*partnerIds)->partner_ids[%d] : %s\n",i,(*partnerIds)->partner_ids[i]);
+                        ParodusInfo("(*partnerIds)->partner_ids[%d] : %s\n",i,(*partnerIds)->partner_ids[i]);
                     }
                     i = 0;
                     for(j = count; j<(count+partnersList->count); j++)
                     {
                         (*partnerIds)->partner_ids[j] = (char *) malloc(sizeof(char) * 64);
                         parStrncpy((*partnerIds)->partner_ids[j], partnersList->partner_ids[i], 64);
-                        ParodusPrint("(*partnerIds)->partner_ids[%lu] : %s\n",j,(*partnerIds)->partner_ids[j]);
+                        ParodusInfo("(*partnerIds)->partner_ids[%lu] : %s\n",j,(*partnerIds)->partner_ids[j]);
                         i++;
                     }
                 }
             }
             else
             {
-                ParodusPrint("partner_ids list is NULL\n");
+                ParodusInfo("EVENT:partner_ids list is NULL\n");
                 (*partnerIds) = (partners_t *) malloc(sizeof(partners_t) + (sizeof(char *) * partnersList->count));
                 (*partnerIds)->count = partnersList->count;
                 i=0;
@@ -143,7 +143,7 @@ int validate_partner_id(wrp_msg_t *msg,
                 {
                     (*partnerIds)->partner_ids[j] = (char *) malloc(sizeof(char) * 64);
                     parStrncpy((*partnerIds)->partner_ids[j], partnersList->partner_ids[i], 64);
-                    ParodusPrint("(*partnerIds)->partner_ids[%lu] : %s\n",j,(*partnerIds)->partner_ids[j]);
+                    ParodusInfo("(*partnerIds)->partner_ids[%lu] : %s\n",j,(*partnerIds)->partner_ids[j]);
                     i++;
                 }
             }
@@ -153,15 +153,15 @@ int validate_partner_id(wrp_msg_t *msg,
             if(msg->u.req.partner_ids != NULL)
             {
                 count = (int) msg->u.req.partner_ids->count;
-                ParodusPrint("partner_ids count is %d\n",count);
+                ParodusInfo("REQ:partner_ids count is %d\n",count);
                 for(i = 0; i < count; i++)
                 {
                     for(j = 0; j<partnersList->count; j++)
                     {
 			if(NULL != partnersList->partner_ids[j]) 
 			{
-		                ParodusPrint("partnersList->partner_ids[%lu] = %s\n",j, partnersList->partner_ids[j]);
-				ParodusPrint("msg->u.req.partner_ids->partner_ids[%lu] = %s\n",i, msg->u.req.partner_ids->partner_ids[i]);
+		                ParodusInfo("partnersList->partner_ids[%lu] = %s\n",j, partnersList->partner_ids[j]);
+				ParodusInfo("msg->u.req.partner_ids->partner_ids[%lu] = %s\n",i, msg->u.req.partner_ids->partner_ids[i]);
 		                if(strcasecmp(partnersList->partner_ids[j], msg->u.req.partner_ids->partner_ids[i]) == 0)
 		                {
 		                    ParodusInfo("partner_id match found\n");
@@ -177,7 +177,7 @@ int validate_partner_id(wrp_msg_t *msg,
                 /* Commandline input partner_ids not matching with partner_ids from request, ignoring request*/
                 if(matchFlag != 1)
                 {
-                    ParodusError("Invalid partner_id %s\n",temp);
+                    ParodusError("REQ:Invalid partner_id %s\n",temp);
                     OnboardLog("Invalid partner_id %s\n",temp);
                     if(partnersList != NULL)
                     {
@@ -196,7 +196,7 @@ int validate_partner_id(wrp_msg_t *msg,
             }
             else
             {
-                ParodusPrint("partner_ids list is NULL\n");
+                ParodusInfo("REQ:partner_ids list is NULL\n");
             }
         }
         if(partnersList != NULL)
@@ -214,7 +214,7 @@ int validate_partner_id(wrp_msg_t *msg,
     }
     else
     {
-        ParodusPrint("partner_id is not available to validate\n");
+        ParodusInfo("EXIT: partner_id is not available to validate\n");
         return 0;
     }
     return 1;
Index: git/src/downstream.c
===================================================================
--- git.orig/src/downstream.c
+++ git/src/downstream.c
@@ -89,7 +89,7 @@ void listenerOnMessage(void * msg, size_
                 case WRP_MSG_TYPE__RETREIVE:
                 case WRP_MSG_TYPE__DELETE:
                 {
-                    ParodusPrint("numOfClients registered is %d\n", get_numOfClients());
+                    ParodusInfo("DS_MSG: numOfClients registered is %d\n", get_numOfClients());
                     int ret = validate_partner_id(message, NULL);
                     if(ret < 0)
                     {
